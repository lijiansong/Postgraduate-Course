; ModuleID = 'test22.bc'
source_filename = "test22.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind uwtable
define i32 @foo(i32 %a, i32 %b) #0 !dbg !6 {
entry:
  call void @llvm.dbg.value(metadata i32 %a, i64 0, metadata !10, metadata !11), !dbg !12
  call void @llvm.dbg.value(metadata i32 %b, i64 0, metadata !13, metadata !11), !dbg !14
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !15, metadata !11), !dbg !16
  call void @llvm.dbg.value(metadata i32 100, i64 0, metadata !17, metadata !11), !dbg !18
  call void @llvm.dbg.value(metadata i32 100, i64 0, metadata !19, metadata !11), !dbg !20
  %tobool = icmp ne i32 %a, 0, !dbg !21
  br i1 %tobool, label %if.then, label %if.else, !dbg !23

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !15, metadata !11), !dbg !16
  br label %if.end, !dbg !24

if.else:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 10, i64 0, metadata !15, metadata !11), !dbg !16
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %x.0 = phi i32 [ 0, %if.then ], [ 10, %if.else ]
  %add = add nsw i32 %x.0, 1, !dbg !26
  call void @llvm.dbg.value(metadata i32 %add, i64 0, metadata !17, metadata !11), !dbg !18
  %cmp = icmp slt i32 %add, %x.0, !dbg !27
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !29

if.then1:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 %add, i64 0, metadata !19, metadata !11), !dbg !20
  br label %if.end2, !dbg !30

if.end2:                                          ; preds = %if.then1, %if.end
  %z.0 = phi i32 [ %add, %if.then1 ], [ 100, %if.end ]
  ret i32 %z.0, !dbg !32
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4}
!llvm.ident = !{!5}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 4.0.0 (trunk 280809) (llvm/trunk 280808)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2)
!1 = !DIFile(filename: "test22.c", directory: "/home/json-lee/workdir/compile/llvm/homework/assignment3/llvm-assignment/llvm-assignment/assign-3")
!2 = !{}
!3 = !{i32 2, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{!"clang version 4.0.0 (trunk 280809) (llvm/trunk 280808)"}
!6 = distinct !DISubprogram(name: "foo", scope: !1, file: !1, line: 1, type: !7, isLocal: false, isDefinition: true, scopeLine: 1, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!7 = !DISubroutineType(types: !8)
!8 = !{!9, !9, !9}
!9 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!10 = !DILocalVariable(name: "a", arg: 1, scope: !6, file: !1, line: 1, type: !9)
!11 = !DIExpression()
!12 = !DILocation(line: 1, column: 13, scope: !6)
!13 = !DILocalVariable(name: "b", arg: 2, scope: !6, file: !1, line: 1, type: !9)
!14 = !DILocation(line: 1, column: 20, scope: !6)
!15 = !DILocalVariable(name: "x", scope: !6, file: !1, line: 2, type: !9)
!16 = !DILocation(line: 2, column: 8, scope: !6)
!17 = !DILocalVariable(name: "y", scope: !6, file: !1, line: 3, type: !9)
!18 = !DILocation(line: 3, column: 8, scope: !6)
!19 = !DILocalVariable(name: "z", scope: !6, file: !1, line: 4, type: !9)
!20 = !DILocation(line: 4, column: 8, scope: !6)
!21 = !DILocation(line: 5, column: 8, scope: !22)
!22 = distinct !DILexicalBlock(scope: !6, file: !1, line: 5, column: 8)
!23 = !DILocation(line: 5, column: 8, scope: !6)
!24 = !DILocation(line: 7, column: 4, scope: !25)
!25 = distinct !DILexicalBlock(scope: !22, file: !1, line: 5, column: 11)
!26 = !DILocation(line: 11, column: 10, scope: !6)
!27 = !DILocation(line: 13, column: 10, scope: !28)
!28 = distinct !DILexicalBlock(scope: !6, file: !1, line: 13, column: 8)
!29 = !DILocation(line: 13, column: 8, scope: !6)
!30 = !DILocation(line: 16, column: 4, scope: !31)
!31 = distinct !DILexicalBlock(scope: !28, file: !1, line: 13, column: 15)
!32 = !DILocation(line: 17, column: 4, scope: !6)
